{
  "source": {
    "hash": "0x6c35f77d40c17d318acbf934a561630837e8f26b04ba6e52443ccd21840f2f5f",
    "language": "ink! 3.4.0",
    "compiler": "rustc 1.68.0-nightly"
  },
  "contract": {
    "name": "struct_tester",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "V3": {
    "spec": {
      "constructors": [
        {
          "args": [
            {
              "label": "init_value",
              "type": {
                "displayName": [
                  "DataStruct"
                ],
                "type": 4
              }
            }
          ],
          "docs": [
            "Constructor that initializes the `bool` value to the given `init_value`."
          ],
          "label": "new",
          "payable": false,
          "selector": "0x9bae9d5e"
        }
      ],
      "docs": [],
      "events": [],
      "messages": [
        {
          "args": [],
          "docs": [],
          "label": "get_value",
          "mutates": false,
          "payable": false,
          "returnType": {
            "displayName": [
              "DataStruct"
            ],
            "type": 4
          },
          "selector": "0xca6f2170"
        }
      ]
    },
    "storage": {
      "struct": {
        "fields": [
          {
            "layout": {
              "cell": {
                "key": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "ty": 0
              }
            },
            "name": "values"
          },
          {
            "layout": {
              "cell": {
                "key": "0x0100000000000000000000000000000000000000000000000000000000000000",
                "ty": 1
              }
            },
            "name": "caller"
          }
        ]
      }
    },
    "types": [
      {
        "id": 0,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "offset_key",
                  "type": 8,
                  "typeName": "Key"
                }
              ]
            }
          },
          "params": [
            {
              "name": "K",
              "type": 1
            },
            {
              "name": "V",
              "type": 4
            }
          ],
          "path": [
            "ink_storage",
            "lazy",
            "mapping",
            "Mapping"
          ]
        }
      },
      {
        "id": 1,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_env",
            "types",
            "AccountId"
          ]
        }
      },
      {
        "id": 2,
        "type": {
          "def": {
            "array": {
              "len": 32,
              "type": 3
            }
          }
        }
      },
      {
        "id": 3,
        "type": {
          "def": {
            "primitive": "u8"
          }
        }
      },
      {
        "id": 4,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "name": "byte_vaulue",
                  "type": 3,
                  "typeName": "u8"
                },
                {
                  "name": "string_value",
                  "type": 5,
                  "typeName": "String"
                },
                {
                  "name": "int_value",
                  "type": 6,
                  "typeName": "u32"
                },
                {
                  "name": "bool_value",
                  "type": 7,
                  "typeName": "bool"
                },
                {
                  "name": "address_value",
                  "type": 1,
                  "typeName": "AccountId"
                }
              ]
            }
          },
          "path": [
            "struct_tester",
            "struct_tester",
            "DataStruct"
          ]
        }
      },
      {
        "id": 5,
        "type": {
          "def": {
            "primitive": "str"
          }
        }
      },
      {
        "id": 6,
        "type": {
          "def": {
            "primitive": "u32"
          }
        }
      },
      {
        "id": 7,
        "type": {
          "def": {
            "primitive": "bool"
          }
        }
      },
      {
        "id": 8,
        "type": {
          "def": {
            "composite": {
              "fields": [
                {
                  "type": 2,
                  "typeName": "[u8; 32]"
                }
              ]
            }
          },
          "path": [
            "ink_primitives",
            "Key"
          ]
        }
      }
    ]
  }
}